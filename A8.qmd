---
title: "Hennepin County tidycensus map"
format: html
editor: visual
---

```{r setup, include = FALSE, echo = FALSE}
library(sf)
library(tidyverse)
library(ggmap)
library(tmap)
library(tidycensus)
library(leaflet)
library(osmdata)
library(tigris)
library(janitor)
library(viridis)
library(ggthemes)
library(stringr)
library(plotly)

```

### leaflet of the entire state of MN

------------------------------------------------------------------------

```{r data_read, include = FALSE}
### 1.3 Please create 1 ggplotly of Hennepin County using sf, ggmap, tidycensus, ggplot, and plotly
## Request the ACS estimates for * Count of managment, art and social service occupations* in Hennepin County, MN

Sys.getenv("CENSUS_API_KEY")
mn_op.df <- get_acs(
  geography = "tract",
  variables = "C24060_002E", #Code for median rent
  state     = "MN",
  county    = "Hennepin",
  year      = 2020,
  geometry  = TRUE
)

#Add a text label to mn_op.df
mn_op_plotly.df <- mn_op.df %>%
  mutate(
    tract      = str_split(NAME, ",") %>%
                 map_chr(1) %>%
                 str_remove("Census Tract "),
    text_label = str_c(
                  "Count: ",
                  tract,
                  "\nOccupation: managment, art and social service"
                  
                 )
  )
#Generate the ggplot
occupation.gg <- ggplot() + 
  geom_sf(data = mn_op_plotly.df, 
          aes(fill = estimate, text = text_label),
          colour = "black", size = 0.1) + 
  labs(title = "Hennepin County, MN 2020 ACS Occupation Count") + 
  scale_fill_viridis_c("Occupation count",labels = scales::number) +
  theme_map() +
  theme(
    plot.title   = element_text(size  = 16,
                                hjust = 0.5),
    legend.text  = element_text(size = 16),
    legend.title = element_text(size = 16),
    legend.position = "right"
  )
#Display
ggplotly(occupation.gg,
         tooltip = "text",
         height  = 600,
         width   = 800) %>%
    style(hoveron = "fills")
```
